### YamlMime:PythonClass
uid: format.numpy.foo.Foo
name: Foo
fullName: format.numpy.foo.Foo
module: format.numpy.foo
inheritances:
- builtins.object
summary: Docstring of <xref:format.numpy.foo.Foo> class in numpy format.
constructor:
  syntax: Foo(init_arg1, init_arg2)
  parameters:
  - name: init_arg1
    description: Parameter init_arg1 from class docstring.
    isRequired: true
    types:
    - <xref:float>
  - name: init_arg2
    description: Parameter init_arg2 from class docstring.
    isRequired: true
    types:
    - <xref:list>[<xref:int>]
methods:
- uid: format.numpy.foo.Foo.class_method
  name: class_method
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.class_method> @classmethod.
  signature: class_method(arg1)
  parameters:
  - name: cls
    description: Class object of <xref:format.numpy.foo.Foo>.
    isRequired: true
    types:
    - <xref:class>
  - name: arg1
    description: Parameter arg1 of <xref:fomrmat.numpy.foo.Foo.class_method>.
    isRequired: true
    types:
    - <xref:str>
- uid: format.numpy.foo.Foo.method
  name: method
  summary: Docstring of normal class method <xref:fomrmat.numpy.foo.Foo.method>.
  signature: method()
- uid: format.numpy.foo.Foo.method_code
  name: method_code
  summary: "Docstring of <xref:fomrmat.numpy.foo.Foo.method_code>.\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\"\
    , \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n   import numpy\
    \ as np\n   a = np.ndarray([1,2,3,4,5])\n   ````\n\nAnother way of code block:\n\
    \n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"language\": \"default\"\
    , \"force\": false, \"linenos\": false} -->\n\n````default\n\n   import numpy\
    \ as np\n   b = np.random.random(10)\n   ````"
  signature: method_code()
- uid: format.numpy.foo.Foo.method_example
  name: method_example
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.method_example>.
  signature: method_example()
  examples:
  - "This is Example content.\nShould support multi-line.\nCan also include file:<!--[!code-default[Main](at\\\
    rst\\enum.py )]-->\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\"\
    : [], \"dupnames\": [], \"backrefs\": [], \"source\": \"d:\\\\Github\\\\python2yaml\\\
    \\tests\\\\example\\\\format\\\\rst\\\\enum.py\", \"xml:space\": \"preserve\"\
    , \"force\": false, \"highlight_args\": {\"linenostart\": 1}, \"language\": \"\
    default\", \"linenos\": false} -->\n\n````default\n\n   # coding: utf-8\n\n  \
    \ from enum import Enum\n\n   class EnumFoo(Enum):\n       \"\"\" Docstring of\
    \ :class:`format.rst.enum.EnumFoo` class.\n       \"\"\"\n\n       VALUE0 = 0\
    \ #: Inline docstring of VALUE0\n       VALUE1 = 1 #: Inlune docstring of VALUE1\n\
    \n   ````\n"
- uid: format.numpy.foo.Foo.method_exception
  name: method_exception
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.method_exception>.
  signature: method_exception()
  exceptions:
  - description: "This function raises\n    exception."
    type: format.rst.foo.FooException
- uid: format.numpy.foo.Foo.method_external_link
  name: method_external_link
  summary: 'Docstring of <xref:fomrmat.numpy.foo.Foo.method_external_link>.

    Inline link should be transformed to markdown: [Link Text](http://inline.external.link).

    And seperated link will fail: [Seprated Link](http://seperated.external.link)'
  signature: method_external_link()
- uid: format.numpy.foo.Foo.method_multiline
  name: method_multiline
  summary: 'Docstring of <xref:fomrmat.numpy.foo.Foo.method_multiline>.

    This docstring has multiple lines of contents.

    And this should work perfectly.'
  signature: method_multiline()
- uid: format.numpy.foo.Foo.method_note
  name: method_note
  summary: 'Docstring of <xref:fomrmat.numpy.foo.Foo.method_note>.



    > [!NOTE]

    > This is content of note.

    >

    > Another line of note contents.

    >'
  signature: method_note()
- uid: format.numpy.foo.Foo.method_return
  name: method_return
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.method_return>.
  signature: method_return()
  return:
    description: This method returns a value.
    types:
    - <xref:bool>
- uid: format.numpy.foo.Foo.method_seealso
  name: method_seealso
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.method_seealso>.
  signature: method_seealso()
  seeAlsoContent: "\n\n  <xref:format.numpy.foo.Foo.mathod_note>\n     See also target.\n"
- uid: format.numpy.foo.Foo.method_warning
  name: method_warning
  summary: 'Docstring of <xref:fomrmat.numpy.foo.Foo.method_warning>.



    > [!WARNING]

    > This is content of warning.

    >'
  signature: method_warning()
- uid: format.numpy.foo.Foo.static_method
  name: static_method
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.static_method @staticmethod>.
  signature: static_method()
attributes:
- uid: format.numpy.foo.Foo.attr
  name: attr
  summary: Docstring of <xref:format.numpy.foo.Foo.attr> from attrbute docstring.
  signature: attr = 1
- uid: format.numpy.foo.Foo.attr_getter
  name: attr_getter
  summary: Docstring of <xref:fomrmat.numpy.foo.Foo.attr_getter> @property.
