### YamlMime:PythonClass
uid: format.rst.foo.Foo
name: Foo
fullName: format.rst.foo.Foo
module: format.rst.foo
inheritances:
- builtins.object
summary: "Docstring of <xref:format.rst.foo.Foo> class in rst format.\n\n   var attr:\n\
  \      Docstring of <xref:format.rst.foo.Foo.attr> from class docstring.\n\n   vartype\
  \ attr:\n      ~format.rst.enum.EnumFoo\n\n   param init_arg1:\n      Parameter\
  \ init_arg1 from class docstring.\n\n   type init_arg1:\n      float or\n\nSSSTTTRRR\n\
  \   param list[int] init_arg2:\n      Parameter init_arg2 from class docstring."
constructor:
  syntax: Foo(init_arg1, init_arg2)
methods:
- uid: format.rst.foo.Foo.class_method
  name: class_method
  summary: Docstring of <xref:format.rst.foo.Foo.class_method> @classmethod.
  signature: class_method(arg1)
  parameters:
  - name: cls
    description: Class object of <xref:format.rst.foo.Foo>.
    isRequired: true
    types:
    - <xref:format.rst.foo.class>
  - name: arg1
    description: Parameter arg1 of <xref:format.rst.foo.Foo.class_method>.
    isRequired: true
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
- uid: format.rst.foo.Foo.method
  name: method
  summary: Docstring of normal class method <xref:format.rst.foo.Foo.method>.
  signature: method()
- uid: format.rst.foo.Foo.method_code
  name: method_code
  summary: "Docstring of <xref:format.rst.foo.Foo.method_code>.\n\n<!-- literal_block\
    \ {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\"\
    : [], \"xml:space\": \"preserve\", \"force\": false, \"language\": \"python\"\
    , \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n   >>> import\
    \ numpy as np\n   >>> a = np.ndarray([1,2,3,4,5])\n   ````\n\nAnother way of code\
    \ block:\n\n<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"\
    dupnames\": [], \"backrefs\": [], \"xml:space\": \"preserve\", \"language\": \"\
    default\", \"force\": false, \"linenos\": false} -->\n\n````default\n\n   import\
    \ numpy as np\n   b = np.random.random(10)\n   ````"
  signature: method_code()
- uid: format.rst.foo.Foo.method_default_value
  name: method_default_value
  summary: Docstring of <xref:format.rst.foo.Foo.method_default_value>.
  signature: method_default_value(arg1='default string', arg2=None)
  parameters:
  - name: arg1
    description: Parameter arg1 of <xref:format.rst.foo.Foo.method_default_value>,
      default value is 'default string'.
    defaultValue: default string
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: arg2
    description: Paremeter arg2 of <xref:format.rst.foo.Foo.method_default_value>
      default value is None.
    defaultValue: None
    types:
    - '[object](https://docs.python.org/3.6/library/functions.html#object)'
- uid: format.rst.foo.Foo.method_default_value_comma
  name: method_default_value_comma
  summary: 'Docstring of <xref:format.rst.foo.Foo.method_default_value_comma>.

    The default value of method parameter contains comma thus will fail to parse.'
  signature: method_default_value_comma(arg1=(1, 2, 3))
  parameters:
  - name: arg1
    description: Parameter arg1 of <xref:format.rst.foo.Foo.method_default_value_comma>,
      default value is (1,2,3).
    defaultValue: (1, 2, 3)
    types:
    - '[tuple](https://docs.python.org/3.6/library/stdtypes.html#tuple)'
- uid: format.rst.foo.Foo.method_example
  name: method_example
  summary: Docstring of <xref:format.rst.foo.Foo.method_example>.
  signature: method_example()
  examples:
  - "<!--[!code-default[Main](at\\rst\\enum.py )]-->\n\n<!-- literal_block {\"ids\"\
    : [], \"classes\": [], \"names\": [], \"dupnames\": [], \"backrefs\": [], \"source\"\
    : \"D:\\\\Github\\\\python2yaml\\\\tests\\\\example\\\\format\\\\rst\\\\enum.py\"\
    , \"xml:space\": \"preserve\", \"force\": false, \"highlight_args\": {\"linenostart\"\
    : 1}, \"language\": \"default\", \"linenos\": false} -->\n\n````default\n\n  \
    \ # coding: utf-8\n\n   from enum import Enum\n\n   class EnumFoo(Enum):\n   \
    \    \"\"\" Docstring of :class:`format.rst.enum.EnumFoo` class.\n       \"\"\"\
    \n\n       VALUE0 = 0 #: Inline docstring of VALUE0\n       VALUE1 = 1 #: Inlune\
    \ docstring of VALUE1\n\n   ````\n"
- uid: format.rst.foo.Foo.method_exception
  name: method_exception
  summary: Docstring of <xref:format.rst.foo.Foo.method_exception>.
  signature: method_exception()
  exceptions:
  - type: 'format.rst.foo.FooException> This function raises

      exception'
- uid: format.rst.foo.Foo.method_external_link
  name: method_external_link
  summary: 'Docstring of <xref:format.rst.foo.Foo.method_external_link>.

    Inline link should be transformed to markdown: [Link Text](http://inline.external.link).

    And seperated link will fail: [Seperated Link](http://seperated.external.link)'
  signature: method_external_link()
- uid: format.rst.foo.Foo.method_multiline
  name: method_multiline
  summary: 'Docstring of <xref:format.rst.foo.Foo.method_multiline>.

    This docstring has multiple lines of contents.

    And this should work perfectly.'
  signature: method_multiline()
- uid: format.rst.foo.Foo.method_note
  name: method_note
  summary: 'Docstring of <xref:format.rst.foo.Foo.method_note>.



    > [!NOTE]

    > This is content of note.

    >

    > Another line of note contents.

    >'
  signature: method_note()
- uid: format.rst.foo.Foo.method_return
  name: method_return
  summary: Docstring of <xref:format.rst.foo.Foo.method_return>.
  signature: method_return()
  return:
    description: This method returns a value.
    types:
    - <xref:format.rst.foo.boolean>
- uid: format.rst.foo.Foo.method_seealso
  name: method_seealso
  summary: Docstring of <xref:format.rst.foo.Foo.method_seealso>.
  signature: method_seealso()
  seeAlsoContent: "  Seealso contents.\n  Multi-line should be supported.\n  And reference\
    \ to <xref:format.rst.foo.Foo> should be okay.\n"
- uid: format.rst.foo.Foo.method_warning
  name: method_warning
  summary: 'Docstring of <xref:format.rst.foo.Foo.method_warning>.



    > [!WARNING]

    > This is content of warning.

    >'
  signature: method_warning()
- uid: format.rst.foo.Foo.static_method
  name: static_method
  summary: Docstring of <xref:format.rst.foo.Foo.static_method> @staticmethod.
  signature: static_method()
attributes:
- uid: format.rst.foo.Foo.attr
  name: attr
  summary: Docstring of <xref:format.rst.foo.Foo.attr> from attrbute docstring.
  signature: attr = 1
- uid: format.rst.foo.Foo.attr_getter
  name: attr_getter
  summary: Docstring of <xref:format.rst.foo.Foo.attr_getter> @property.
