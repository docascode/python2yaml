### YamlMime:PythonClass
uid: botbuilder.adapters.slack.SlackAdapter
name: SlackAdapter
fullName: botbuilder.adapters.slack.SlackAdapter
module: botbuilder.adapters.slack
inheritances:
- botbuilder.core.bot_adapter.BotAdapter
- abc.ABC
summary: "BotAdapter that can handle incoming Slack events. Incoming Slack events\
  \ are deserialized to an Activity that is\n   dispatched through the middleware\
  \ and bot pipeline."
constructor:
  syntax: 'SlackAdapter(client: botbuilder.adapters.slack.slack_client.SlackClient,
    on_turn_error: typing.Callable[[botbuilder.core.turn_context.TurnContext, Exception],
    typing.Awaitable] = None, options: botbuilder.adapters.slack.slack_adatper_options.SlackAdapterOptions
    = None)'
methods:
- uid: botbuilder.adapters.slack.SlackAdapter.continue_conversation
  name: continue_conversation
  summary: Send a proactive message to a conversation.
  signature: 'continue_conversation(reference: botbuilder.schema._models_py3.ConversationReference,
    callback: typing.Callable, bot_id: str = None, claims_identity: botframework.connector.auth.claims_identity.ClaimsIdentity
    = None, audience: str = None)'
  parameters:
  - name: reference
    isRequired: true
    types:
    - <xref:botbuilder.schema.ConversationReference>
  - name: callback
    isRequired: true
    types:
    - <xref:typing.Callable>
  - name: bot_id
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  - name: claims_identity
    defaultValue: None
    types:
    - <xref:botframework.connector.auth.ClaimsIdentity>
  - name: audience
    defaultValue: None
    types:
    - '[str](https://docs.python.org/3.6/library/stdtypes.html#str)'
  remarks: "Most channels require a user to initiate a conversation with a bot before\
    \ the bot can send activities to the\n   user.\n"
- uid: botbuilder.adapters.slack.SlackAdapter.delete_activity
  name: delete_activity
  summary: Delete a previous message.
  signature: 'delete_activity(context: botbuilder.core.turn_context.TurnContext, reference:
    botbuilder.schema._models_py3.ConversationReference)'
  parameters:
  - name: context
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: reference
    isRequired: true
    types:
    - <xref:botbuilder.schema.ConversationReference>
- uid: botbuilder.adapters.slack.SlackAdapter.process
  name: process
  summary: Accept an incoming webhook request and convert it into a TurnContext which
    can be processed by the bot's logic.
  signature: 'process(req: aiohttp.web_request.Request, logic: typing.Callable) ->
    aiohttp.web_response.Response'
  parameters:
  - name: req
    isRequired: true
    types:
    - '[aiohttp.web_request.Request](aiohttp.web_request.Request)'
  - name: logic
    isRequired: true
    types:
    - <xref:tying.Callable>
  return:
    description: The aiohttp Response.
    types:
    - '[aiohttp.web_response.Response](aiohttp.web_response.Response)'
- uid: botbuilder.adapters.slack.SlackAdapter.send_activities
  name: send_activities
  summary: Send a message from the bot to the messaging API.
  signature: 'send_activities(context: botbuilder.core.turn_context.TurnContext, activities:
    typing.List[botbuilder.schema._models_py3.Activity]) -> typing.List[botbuilder.schema._models_py3.ResourceResponse]'
  parameters:
  - name: context
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: activities
    isRequired: true
    types:
    - <xref:typing.List[Activity]>
  return:
    description: An array of ResourceResponse objects containing the IDs that Slack
      assigned to the sent messages.
    types:
    - <xref:typing.List[ResourceResponse]>
- uid: botbuilder.adapters.slack.SlackAdapter.update_activity
  name: update_activity
  summary: Update a previous message with new content.
  signature: 'update_activity(context: botbuilder.core.turn_context.TurnContext, activity:
    botbuilder.schema._models_py3.Activity)'
  parameters:
  - name: context
    isRequired: true
    types:
    - <xref:botbuilder.core.TurnContext>
  - name: activity
    isRequired: true
    types:
    - <xref:botbuilder.schema.Activity>
  return:
    description: A resource response with the ID of the updated activity.
    types:
    - <xref:botbuilder.schema.ResourceResponse>
